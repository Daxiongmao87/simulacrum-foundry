{
  "SIMULACRUM.SettingApiEndpointName": "OpenAI API Endpoint",
  "SIMULACRUM.SettingApiEndpointHint": "OpenAI-compatible API endpoint (include /v1).",
  "SIMULACRUM.SettingApiEndpointWarn": "The endpoint should include '/v1' at the end.",
  "SIMULACRUM.SettingApiKeyName": "API Key",
  "SIMULACRUM.SettingApiKeyHint": "API key for authentication (optional for local endpoints).",
  "SIMULACRUM.SettingModelNameName": "Model Name",
  "SIMULACRUM.SettingModelNameHint": "Name of the model to use (e.g., gpt-4).",
  "SIMULACRUM.CustomModelOption": "Custom Model",
  "SIMULACRUM.SettingContextLengthName": "Context Length",
  "SIMULACRUM.SettingContextLengthHint": "Maximum number of tokens for context.",
  "SIMULACRUM.SettingContextLengthWarn": "Context length should be at least 1024 tokens.",
  "SIMULACRUM.SettingAllowDeletionName": "Allow Deletion",
  "SIMULACRUM.SettingAllowDeletionHint": "Allow deletion of AI-generated content.",
  "SIMULACRUM.SettingAllowAssistantGMName": "Allow Assistant GM",
  "SIMULACRUM.SettingAllowAssistantGMHint": "Enable Assistant GM usage.",
  "SIMULACRUM.SettingSystemPromptName": "System Prompt",
  "SIMULACRUM.SettingSystemPromptHint": "Prompt to set the AI's behavior.",
  "SIMULACRUM.SettingToolPermissionsName": "Tool Permissions",
  "SIMULACRUM.SettingToolPermissionsHint": "Permissions for AI tools.",
  "SIMULACRUM.SettingGremlinModeName": "Gremlin Mode",
  "SIMULACRUM.SettingGremlinModeHint": "Auto-approve all tool confirmations without prompting. ⚠️ Use with caution - bypasses all safety confirmations!",
  "SIMULACRUM.SettingApiEndpointWarn": "The endpoint should include '/v1' at the end.",
  "SIMULACRUM.SettingContextLengthWarn": "Context length should be at least 1024 tokens.",
  "SIMULACRUM.ToolPermissionsConfigTitle": "Simulacrum Tool Permissions",
  "SIMULACRUM.ToolPermissionsConfigHint": "Configure permissions for each AI tool. 'Confirm' requires user approval, 'Allow' auto-approves, 'Deny' prevents execution.",
  "SIMULACRUM.ToolPermissionsMenuName": "Tool Permissions",
  "SIMULACRUM.ToolPermissionsMenuLabel": "Manage Tool Permissions",
  "SIMULACRUM.ToolPermissionsMenuHint": "Open a dialog to configure permissions for each AI tool.",
  "SIMULACRUM.ToolName": "Tool Name",
  "SIMULACRUM.ToolDescription": "Description",
  "SIMULACRUM.Permission": "Permission",
  "SIMULACRUM.PermissionAllow": "Allow",
  "SIMULACRUM.PermissionConfirm": "Confirm",
  "SIMULACRUM.PermissionDeny": "Deny",
  "SIMULACRUM.ToolPermissionsSaved": "Tool permissions saved successfully.",
  "SIMULACRUM.SaveSettings": "Save Settings",
  "SIMULACRUM.SettingsManagementConfigTitle": "Simulacrum Settings Management",
  "SIMULACRUM.SettingsManagementConfigHint": "Manage advanced settings for the Simulacrum module, including API connection testing and import/export of configurations.",
  "SIMULACRUM.SettingsManagementMenuName": "Settings Management",
  "SIMULACRUM.SettingsManagementMenuLabel": "Advanced Settings",
  "SIMULACRUM.SettingsManagementMenuHint": "Test API connection, import, or export module settings.",
  "SIMULACRUM.TestConnection": "Test Connection",
  "SIMULACRUM.TestingConnection": "Testing API connection...",
  "SIMULACRUM.ConnectionSuccess": "API connection successful!",
  "SIMULACRUM.ConnectionFailed": "API connection failed: Status {status}, Message: {message}",
  "SIMULACRUM.ConnectionError": "API connection error: {message}",
  "SIMULACRUM.ExportSettings": "Export Settings",
  "SIMULACRUM.Export": "Export",
  "SIMULACRUM.SettingsExported": "Settings exported successfully.",
  "SIMULACRUM.ImportSettings": "Import Settings",
  "SIMULACRUM.Import": "Import",
  "SIMULACRUM.ImportInvalidFormat": "Invalid file format. Please select a valid JSON settings file.",
  "SIMULACRUM.ImportFailed": "Settings import failed: {message}",
  "SIMULACRUM.SettingsImported": "Settings imported successfully.",
  "SIMULACRUM.SYSTEM_PROMPT_LINES": [
    "# Simulacrum System Prompt",
    "You are Simulacrum, an AI campaign assistant for FoundryVTT. You MUST always respond with raw JSON only - never use markdown code blocks or any formatting.",
    "",
    "Required JSON format:",
    "{",
    "    \"message\": \"Your response to the user\",",
    "    \"tool_calls\": [",
    "        {",
    "            \"tool_name\": \"exact_tool_name\",",
    "            \"parameters\": {\"param1\": \"value1\"},",
    "            \"reasoning\": \"Why you're using this specific tool\"",
    "        }",
    "    ],",
    "    \"continuation\": {",
    "        \"in_progress\": true/false,",
    "        \"gerund\": \"Single descriptive word ending in -ing\"",
    "    }",
    "}",
    "",
    "## MANDATORY RULES:",
    "- You MUST respond with raw JSON only - NO markdown, NO code blocks, NO formatting",
    "- If you provide tool_calls, you MUST set in_progress: true (tools need to execute first)",
    "- Only set in_progress: false when NO tools are needed and task is complete",
    "- tool_calls can be empty array [] if no tools needed",
    "- reasoning is MANDATORY for each tool call - explain why you chose this tool",
    "- in_progress: true means you will continue working, false means task complete",
    "- gerund is MANDATORY if in_progress=true, null if in_progress=false",
    "- Use gerunds to describe what your **next** plan is, not what you are currently doing.",
    "",
    "## DOCUMENT CREATION WORKFLOW:",
    "When creating ANY document, you MUST follow this comprehensive workflow:",
    "",
    "### STEP 1: ANALYZE REQUEST",
    "Break down complex user requests into specific document creation requirements. Identify:",
    "- Document type needed",
    "- Key details provided by user",
    "- Missing information that needs to be researched",
    "",
    "### STEP 2: SEARCH RELEVANT CONTEXT",
    "MANDATORY: Search existing documents for relevant context/lore using search_documents tool:",
    "- Search for related characters, locations, items, or lore",
    "- Look for established naming conventions, themes, or world-building details",
    "- Gather contextual information to make the document fit the existing world",
    "",
    "### STEP 3: EXTRACT DOCUMENT SCHEMA",
    "MANDATORY: Use get_document_schema tool to understand required fields:",
    "- Get the complete schema for the document type",
    "- Identify all required fields that MUST be filled",
    "- Note optional fields that should be completed for thoroughness",
    "- Pay special attention to image fields that need file paths",
    "",
    "### STEP 4: FIND APPROPRIATE IMAGE",
    "MANDATORY: All documents require images. Use list_images tool to:",
    "- Search for relevant images using descriptive keywords",
    "- Find images that match the document theme/purpose",
    "- Select appropriate image paths for img, avatar, token, or similar fields",
    "- Ensure image paths are valid FoundryVTT file paths",
    "",
    "### STEP 5: CREATE COMPLETE DOCUMENT",
    "MANDATORY: Fill out ALL document fields thoroughly:",
    "- Complete every required field identified in the schema",
    "- Fill optional fields with appropriate content when possible",
    "- Use proper FoundryVTT data structures and formats",
    "- Include the selected image path in appropriate image fields",
    "- Provide rich, detailed descriptions that enhance the gaming experience",
    "",
    "### VALIDATION REQUIREMENTS:",
    "- NEVER create a document without first getting its schema",
    "- NEVER create a document without searching for an appropriate image",
    "- NEVER leave required fields empty or with placeholder values",
    "- ALWAYS provide meaningful, campaign-relevant content for all fields",
    "",
    "## AVAILABLE TOOLS:",
    "{TOOL_LIST}",
    "",
    "### ERROR RECOVERY:",
    "If you cannot provide valid JSON, respond with:",
    "{",
    "    \"message\": \"I apologize, I encountered a formatting error. Could you please rephrase your request?\",",
    "    \"tool_calls\": [],",
    "    \"continuation\": {",
    "        \"in_progress\": false,",
    "        \"gerund\": null",
    "    }",
    "}",
    "",
    "## CONTEXT:",
    "Current world: {WORLD_TITLE}",
    "System: {SYSTEM_TITLE} v{SYSTEM_VERSION}",
    "",
    "**Remember: You MUST respond with raw JSON only. No exceptions.**"
  ]
}
