SIMULACRUM FOUNDRY VTT - ARCHITECTURE OVERVIEW
=====================================================

📁 CORE SYSTEM ARCHITECTURE
============================

┌─────────────────────────────────────────────────────────────────┐
│                        SIMULACRUM CORE                         │
│                   (scripts/core/simulacrum-core.js)            │
│  ┌─ Entry Point & Orchestrator ─┐                             │
│  │ • init(), onReady()          │                             │
│  │ • generateResponse()         │                             │
│  │ • registerDefaultTools()     │                             │
│  └─────────────────────────────┘                             │
└─────────────────┬───────────────────────────┬─────────────────┘
                  │                           │
                  ▼                           ▼
┌─────────────────────────────┐    ┌─────────────────────────────┐
│        AI CLIENT            │    │    CONVERSATION MANAGER     │
│  (scripts/core/ai-client.js)│    │ (scripts/core/conversation.js)│
│                             │    │                             │
│ ┌─ AI Provider Abstraction ─┐│    │ ┌─ History & Token Mgmt ─┐ │
│ │ • chat()                  ││    │ │ • addMessage()          │ │
│ │ • validateConnection()    ││    │ │ • getMessages()         │ │
│ │ • registerProvider()      ││    │ │ • compressHistory()     │ │
│ └─────────────────────────┘│    │ └─────────────────────────┘ │
└─────────┬───────────────────┘    └─────────────────────────────┘
          │
          ▼
┌─────────────────────────────┐
│      AI PROVIDERS           │
│  (scripts/core/ai-client.js)│
│                             │
│ ┌─ OpenAIProvider ─┐        │
│ │ ┌─ MockAIProvider ─┐      │
│ │ │                  │      │
│ │ │ • sendMessage()  │      │
│ │ │ • generateResp() │      │
│ │ └──────────────────┘      │
│ └───────────────────────────│
└─────────────────────────────┘

🔧 TOOL SYSTEM ARCHITECTURE
============================

┌─────────────────────────────────────────────────────────────────┐
│                      TOOL REGISTRY                             │
│                 (scripts/core/tool-registry.js)                │
│  ┌─ Tool Management Singleton ─┐                               │
│  │ • registerTool()            │                               │
│  │ • executeTool()             │                               │
│  │ • getToolSchemas()          │                               │
│  └─────────────────────────────┘                               │
└─────────────────┬───────────────────────────────────────────────┘
                  │
                  ▼
┌─────────────────────────────────────────────────────────────────┐
│                      BASE TOOL                                 │
│                 (scripts/tools/base-tool.js)                   │
│  ┌─ Abstract Tool Foundation ─┐                                │
│  │ • execute() [abstract]     │                                │
│  │ • validateParameters()     │                                │
│  │ • getSchema()              │                                │
│  └─────────────────────────────┘                               │
└─────────────────┬───────────────────────────────────────────────┘
                  │
        ┌─────────┼─────────┬─────────┬─────────┬─────────┐
        ▼         ▼         ▼         ▼         ▼         ▼
┌─────────────┐ ┌──────┐ ┌──────┐ ┌──────┐ ┌──────┐ ┌──────┐
│DocumentCreate│ │ Read │ │Update│ │Delete│ │ List │ │Search│
│    Tool     │ │ Tool │ │ Tool │ │ Tool │ │ Tool │ │ Tool │
└─────────────┘ └──────┘ └──────┘ └──────┘ └──────┘ └──────┘
                           │
                           ▼
                ┌─────────────────────────────┐
                │       DOCUMENT API          │
                │ (scripts/core/document-api.js)│
                │                             │
                │ ┌─ FoundryVTT Interface ─┐  │
                │ │ • createDocument()     │  │
                │ │ • getDocument()        │  │
                │ │ • updateDocument()     │  │
                │ │ • deleteDocument()     │  │
                │ │ • listDocuments()      │  │
                │ │ • searchDocuments()    │  │
                │ └─────────────────────────┘  │
                └─────────────────────────────┘

🖥️  USER INTERFACE LAYER
=========================

┌─────────────────────────────────────────────────────────────────┐
│                 SIMULACRUM SIDEBAR TAB                         │
│             (scripts/ui/simulacrum-sidebar-tab.js)             │
│  ┌─ FoundryVTT v13 Sidebar Integration ─┐                      │
│  │ • addMessage()                        │                      │
│  │ • _onSendMessage()                    │                      │
│  │ • _onClearChat()                      │                      │
│  └─────────────────────────────────────┘                      │
└─────────────────┬───────────────────────────────────────────────┘
                  │
                  ▼
┌─────────────────────────────────────────────────────────────────┐
│                     CHAT HANDLER                               │
│                (scripts/core/chat-handler.js)                  │
│  ┌─ Message Processing Orchestrator ─┐                         │
│  │ • processUserMessage()            │                         │
│  │ • handleAIResponse()              │                         │
│  │ • handleToolExecution()           │                         │
│  └─────────────────────────────────┘                         │
└─────────────────┬───────────────────────────────────────────────┘
                  │
                  ▼
┌─────────────────────────────────────────────────────────────────┐
│                 CONVERSATION ENGINE                            │
│             (scripts/core/conversation-engine.js)              │
│  ┌─ Single Turn Processing ─┐                                  │
│  │ • processTurn()          │                                  │
│  │ • Pre-tool correction    │                                  │
│  │ • Tool loop delegation   │                                  │
│  └─────────────────────────┘                                  │
└─────────────────────────────────────────────────────────────────┘

🔄 MESSAGE PROCESSING FLOW
==========================

User Input → Sidebar → ChatHandler → ConversationEngine → SimulacrumCore
     ↓              ↑                                            ↓
   Display    Tool Results                                  AI Response
     ↑              ↓                                            ↓
   Sidebar ← Tool Registry ← Tool Execution ← Tool Loop ← Has Tools?
                    ↓
              Document API → FoundryVTT Documents

📁 KEY UTILITY CLASSES
======================

┌─ Logger (scripts/utils/logger.js) ─┐
│ • Centralized logging              │
│ • Component-based loggers          │
└─────────────────────────────────────┘

┌─ Validation System ─────────────────┐
│ • ValidationEngine                  │
│ • SchemaValidator                   │
│ • ValidationErrorHandler            │
│ (scripts/utils/validation*.js)      │
└─────────────────────────────────────┘

┌─ Error Hierarchy ───────────────────┐
│ • SimulacrumError (base)            │
│ • ValidationError                   │
│ • ToolError                         │
│ • DocumentError                     │
│ • APIError                          │
│ (scripts/utils/errors.js)           │
└─────────────────────────────────────┘

📋 ARCHITECTURAL PATTERNS
=========================

🏗️  Static Orchestration: SimulacrumCore coordinates everything via static methods
🔧 Singleton Registry: ToolRegistry manages all tool instances globally
🎭 Strategy Pattern: AIClient abstracts different AI providers (OpenAI, Mock)
📝 Template Method: BaseTool provides common validation/execution flow
🔍 Observer Pattern: UI updates via callbacks during processing
🧩 Composition over Inheritance: Flexible relationships between components
💉 Dependency Injection: Tools receive DocumentAPI via setDocumentAPI()

🗂️  FILE ORGANIZATION
====================

📁 scripts/
├── 📁 core/           # Core system classes
├── 📁 tools/          # Document manipulation tools
├── 📁 ui/             # User interface components
├── 📁 utils/          # Utility classes and functions
└── 📄 simulacrum.js   # Module entry point

📊 STATISTICS
=============

• 35+ JavaScript files analyzed
• 20+ class definitions mapped
• 7 main document tools implemented
• 4-layer architecture (UI → Handler → Core → API)
• Comprehensive error handling with 5+ error types
• Full test coverage with Jest framework